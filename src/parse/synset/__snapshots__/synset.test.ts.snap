// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parseSynset should parse synset: !#: synset 1`] = `
Synset {
  "groups": Array [],
  "meta": Object {
    "autogenerated": true,
    "debatable": true,
  },
}
`;

exports[`parseSynset should parse synset: !#: toString 1`] = `"#!"`;

exports[`parseSynset should parse synset: !#course: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "course",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": true,
    "debatable": true,
  },
}
`;

exports[`parseSynset should parse synset: !#course: toString 1`] = `"#!course"`;

exports[`parseSynset should parse synset: !: synset 1`] = `
Synset {
  "groups": Array [],
  "meta": Object {
    "autogenerated": true,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: !: toString 1`] = `"!"`;

exports[`parseSynset should parse synset: !U-Boot: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "U-Boot",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": true,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: !U-Boot: toString 1`] = `"!U-Boot"`;

exports[`parseSynset should parse synset: #!: synset 1`] = `
Synset {
  "groups": Array [],
  "meta": Object {
    "autogenerated": true,
    "debatable": true,
  },
}
`;

exports[`parseSynset should parse synset: #!: toString 1`] = `"#!"`;

exports[`parseSynset should parse synset: #!only, ĝuste nun: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "only",
        },
        Lemma {
          "annotations": Array [],
          "value": "ĝuste nun",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": true,
    "debatable": true,
  },
}
`;

exports[`parseSynset should parse synset: #!only, ĝuste nun: toString 1`] = `"#!only, ĝuste nun"`;

exports[`parseSynset should parse synset: #: synset 1`] = `
Synset {
  "groups": Array [],
  "meta": Object {
    "autogenerated": false,
    "debatable": true,
  },
}
`;

exports[`parseSynset should parse synset: #: toString 1`] = `"#"`;

exports[`parseSynset should parse synset: #co-worker: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "co-worker",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": true,
  },
}
`;

exports[`parseSynset should parse synset: #co-worker: toString 1`] = `"#co-worker"`;

exports[`parseSynset should parse synset: : synset 1`] = `
Synset {
  "groups": Array [],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: : toString 1`] = `""`;

exports[`parseSynset should parse synset: there was/were not: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "there was/were not",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: there was/were not: toString 1`] = `"there was/were not"`;

exports[`parseSynset should parse synset: Добрий ранок!; Доброго ранку!: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "Добрий ранок!",
        },
      ],
    },
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "Доброго ранку!",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: Добрий ранок!; Доброго ранку!: toString 1`] = `"Добрий ранок!; Доброго ранку!"`;

exports[`parseSynset should parse synset: будет / будут: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "будет / будут",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: будет / будут: toString 1`] = `"будет / будут"`;

exports[`parseSynset should parse synset: з'явитися: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "з'явитися",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: з'явитися: toString 1`] = `"з'явитися"`;

exports[`parseSynset should parse synset: и; а, зато (смысл2): synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "и",
        },
      ],
    },
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "а",
        },
        Lemma {
          "annotations": Array [
            Annotation {
              "type": "custom",
              "value": "смысл2",
            },
          ],
          "value": "зато",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: и; а, зато (смысл2): toString 1`] = `"и; а, зато (смысл2)"`;

exports[`parseSynset should parse synset: по, за (напр.: по грибы, за хлебом): synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [],
          "value": "по",
        },
        Lemma {
          "annotations": Array [
            Annotation {
              "type": "custom",
              "value": "напр.: по грибы, за хлебом",
            },
          ],
          "value": "за",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: по, за (напр.: по грибы, за хлебом): toString 1`] = `"по, за (напр.: по грибы, за хлебом)"`;

exports[`parseSynset should parse synset: реформација (верски / политички покрет): synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [
            Annotation {
              "type": "custom",
              "value": "верски / политички покрет",
            },
          ],
          "value": "реформација",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: реформација (верски / политички покрет): toString 1`] = `"реформација (верски / политички покрет)"`;

exports[`parseSynset should parse synset: собака (символ) [@]: synset 1`] = `
Synset {
  "groups": Array [
    LemmaGroup {
      "lemmas": Array [
        Lemma {
          "annotations": Array [
            Annotation {
              "type": "custom",
              "value": "символ",
            },
          ],
          "value": "собака [@]",
        },
      ],
    },
  ],
  "meta": Object {
    "autogenerated": false,
    "debatable": false,
  },
}
`;

exports[`parseSynset should parse synset: собака (символ) [@]: toString 1`] = `"собака [@] (символ)"`;
