import { glag2latn } from './glag2latn';

describe('Glag → Latn', () => {
  const SANITY_1 = `\
Ⱀⰰ ⰲⱏⰸⰲⱏⰹⱎⰵⱀⱁⱄⱅⰻ ⱁⰲⱌⰰ· ⰽⱅⱁⱃⰰ ⱀⰵ ⰻⰿⱑⰾⰰ ⰲⱏⰾⱀⱘ· ⱆⰲⰻⰴⱑⰾⰰ ⰽⱁⱀⱐⰵⰲ։ Ⱂⱐⱃⰲⱏⰹ ⱅⱔⰳⰰⰾ ⱅⱔⰶⰽⱏⰹ ⰲⱁⰸ· ⰲⱅⱁⱃⱏⰹ ⱀⱁⱄⰻⰾ ⰲⰵⰾⰻⰽⱁ ⰱⱃⱑⰿⱔ· ⱅⱃⰵⱅⰺⰻ ⰱⱏⱃⰸⱁ ⰲⱁⰸⰻⰾ ⰿⱘⰶⰰ։
Ⱁⰲⱌⰰ ⱃⱑⰽⰾⰰ ⰽⱁⱀⱐⰰⰿ⸬ ⸪Ⰱⱁⰾⰻ ⰿⱀⱑ ⱄⱐⱃⰴⱌⰵ· ⰽⱏⰳⰴⰰ ⰲⰻⰼⱘ· ⰽⰰⰽⱁ ⱍⰾⱁⰲⱑⰽ ⰲⰾⰰⰴⰰⰹⰵ ⰽⱁⱀⱐⰰⰿⰻ։⸪
Ⰽⱁⱀⱐⰻ ⱃⱑⰽⰾⰻ⸬ ⸪Ⱄⰾⱆⱎⰰⰹ· ⱁⰲⱌⱁ· ⱀⰰⰿ ⰱⱁⰾⰻ ⱄⱐⱃⰴⱌⰵ· ⰽⱏⰳⰴⰰ ⰲⰻⰴⰻⰿⱁ ⱁⰲⱁ⸬ ⰿⱘⰶ· ⰳⱁⱄⱂⱁⰴⰰⱃⱐ· ⰱⰵⱃⰵ ⱅⰲⱁⱙ ⰲⱏⰾⱀⱘ· ⰴⰰ ⰱⱏⰹ ⰻⰿⱑⰾ ⰴⰾⱐⰰ ⱄⰵⰱⰵ ⱅⰵⱂⰾⱁ ⱂⰰⰾⱐⱅⱁ։ Ⰰ ⱁⰲⱌⰰ ⰹⰵⱄⱅ ⰱⰵⰸ ⰲⱏⰾⱀⱏⰹ։⸪
Ⱆⱄⰾⱏⰹⱎⰰⰲⱎⰻ ⱅⱁ· ⱁⰲⱌⰰ ⰻⰸⰱⱑⰳⰾⰰ ⰲ ⱃⱉⰲⱀⰻⱀⱘ։ | Ⱁⱇⰻⱌⰻⰰⰾⱀⱏⰹ ⱀⱁⱋⱀⱏⰹ ⱁⰴⰹⰵⰸⰴ ⰴⱁ Ⰽⱏⰹⰺⰵⰲⰰ։ Ⱅⱐⰿⰰ· ⰻ ⰽⱁⱃⰵⱀⱐⰵ ⱃⰵⰲⰵⱀⱐⰰ ⱂⱁⱍⱔⰾⰻ ⱃⱉⱄⱅⰵⱀⱐⰺⰵ· ⰰ ⱄⰾⱆⰳⰻ ⱂⱁⰲⱑⰴⱑⰾⰻ ⰽⱃⱉⰾⱐⱆ ⱁ ⰲⰵⱄⰵⰾⱐⱓ։.`;

  const SANITY_2 = `\
Ⱀⰰ ⰲⱏⰸⰲⱏⰹⱎⰵⱀⱁⱄⱅⰻ ⱁⰲⱌⰰ· ⰽⱅⱁⱃⰰ ⱀⰵ ⰻⱞⱑⰾⰰ ⰲⱏⰾⱀⱘ· ⱆⰲⰻⰴⱑⰾⰰ ⰽⱁⱀⱐⰵⰲ։ Ⱂⱐⱃⰲⱏⰹ ⱅⱔⰳⰰⰾ ⱅⱔⰶⰽⱏⰹ ⰲⱁⰸ· ⰲⱅⱁⱃⱏⰹ ⱀⱁⱄⰻⰾ ⰲⰵⰾⰻⰽⱁ ⰱⱃⱑⱞⱔ· ⱅⱃⰵⱅⰺⰻ ⰱⱏⱃⰸⱁ ⰲⱁⰸⰻⰾ ⱞⱘⰶⰰ։
Ⱁⰲⱌⰰ ⱃⱑⰽⰾⰰ ⰽⱁⱀⱐⰰⱞ⸬ ⸪Ⰱⱁⰾⰻ ⱞⱀⱑ ⱄⱐⱃⰴⱌⰵ· ⰽⱏⰳⰴⰰ ⰲⰻⰼⱘ· ⰽⰰⰽⱁ ⱍⰾⱁⰲⱑⰽ ⰲⰾⰰⰴⰰⰹⰵ ⰽⱁⱀⱐⰰⱞⰻ։⸪
Ⰽⱁⱀⱐⰻ ⱃⱑⰽⰾⰻ⸬ ⸪Ⱄⰾⱆⱎⰰⰹ· ⱁⰲⱌⱁ· ⱀⰰⱞ ⰱⱁⰾⰻ ⱄⱐⱃⰴⱌⰵ· ⰽⱏⰳⰴⰰ ⰲⰻⰴⰻⱞⱁ ⱁⰲⱁ⸬ ⱞⱘⰶ· ⰳⱁⱄⱂⱁⰴⰰⱃⱐ· ⰱⰵⱃⰵ ⱅⰲⱁⱙ ⰲⱏⰾⱀⱘ· ⰴⰰ ⰱⱏⰹ ⰻⱞⱑⰾ ⰴⰾⱐⰰ ⱄⰵⰱⰵ ⱅⰵⱂⰾⱁ ⱂⰰⰾⱐⱅⱁ։ Ⰰ ⱁⰲⱌⰰ ⰺⰵⱄⱅ ⰱⰵⰸ ⰲⱏⰾⱀⱏⰹ։⸪
Ⱆⱄⰾⱏⰹⱎⰰⰲⱎⰻ ⱅⱁ· ⱁⰲⱌⰰ ⰻⰸⰱⱑⰳⰾⰰ ⰲ ⱃⱉⰲⱀⰻⱀⱘ։ | Ⱁⱇⰻⱌⰻⰰⰾⱀⱏⰹ ⱀⱁⱍⱐⱀⱏⰹ ⱁⰴⰹⰵⰸⰴ ⰴⱁ Ⰽⱏⰹⰺⰵⰲⰰ։ Ⱅⱐⱞⰰ· ⰻ ⰽⱁⱃⰵⱀⱐⰵ ⱃⰵⰲⰵⱀⱐⰰ ⱂⱁⱍⱔⰾⰻ ⱃⱉⱄⱅⰵⱀⱐⰺⰵ· ⰰ ⱄⰾⱆⰳⰻ ⱂⱁⰲⱑⰴⱑⰾⰻ ⰽⱃⱉⰾⱐⱆ ⱁ ⰲⰵⱄⰵⰾⱐⱓ։.`;

  test('sanity check', () => {
    expect(glag2latn(SANITY_1)).toMatchSnapshot();
  });

  test('multiple variants -> same result', () => {
    const latn1 = glag2latn(SANITY_1);
    const latn2 = glag2latn(SANITY_2);
    expect(latn1).toBe(latn2);
  });
});
